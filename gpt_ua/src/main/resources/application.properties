bot.token=${BOT_TOKEN}
bot.name=${BOT_NAME}
gpt.token=${GPT_TOKEN}
api.ver=@version@
server.port=5000
# Datasource
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.data.mongodb.uri=${DB_URI}
# Fine-tuning of the GPT Chat (see in https://platform.openai.com/examples)
gpt.temperature=0.3
gpt.max_tokens=2000
gpt.top_p=0.0
gpt.frequency_penalty=0.0
gpt.presence_penalty=0.0
gpt.stop='\n'
# Ratelimiter
resilience4j.ratelimiter.instances.testEndpoint.limit-for-period=1
resilience4j.ratelimiter.instances.testEndpoint.limit-refresh-period=1s
resilience4j.ratelimiter.instances.testEndpoint.timeout-duration=1s
# user session, second
user.session.time.limit=180
user.session.time.limit.cron=*/5 * * * * *
#Telegram-bot cache
telegram.cache.minutes_after_access=3
telegram.cache.max_size=100
# number of word in line
answer.numberOfWorld=20
# Actuator
management.endpoints.web.exposure.include=health,prometheus
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
# http client timeout
httpClient.readTimeout=60